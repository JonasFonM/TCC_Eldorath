generator client {
  provider = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model character {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @db.Timestamp(0)
  name   String  @db.Text
  level Int
  experience Int @default(0)
  tier Int
  agility Int
  body Int
  mind Int
  public Boolean  @default(false)
  authorId  Int
  user      user     @relation(fields: [authorId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "character_ibfk_1")

  skills character_skill[] @relation
  lineages character_lineage[] @relation
  trainings character_training[] @relation
  paths character_path[] @relation
  weapons character_weapon[] @relation
  armors character_armor[] @relation

  stats charStats? @relation
  resistances charResistances? @relation


  @@index([authorId], map: "authorId")
  
}

model charStats {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now()) @db.Timestamp(0)
  vitality Int
  vigor Int
  power Int
  speed Int
  defense Int
  initiative Int
  trueSize Int @default(1)
  relativeSize Int @default(1)
  baseWeight Int
  carryCap Int
  liftCap Int
  characterId Int     @unique(map: "characterId")
  character character @relation(fields: [characterId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "c_ibfk_1")
}

model charResistances {
  id Int @id @default(autoincrement())
  characterId Int @unique(map: "characterId")
  impactRes Int @default(0)
  pierceRes Int @default(0)
  slashRes Int @default(0)
  acidRes Int @default(0)
  coldRes Int @default(0)
  fireRes Int @default(0)
  arcaneRes Int @default(0)
  cosmicRes Int @default(0)
  psychicRes Int @default(0)
  occultRes Int @default(0)
  profaneRes Int @default(0)
  sacredRes Int @default(0)
  character       character     @relation(fields: [characterId], references: [id], onDelete: NoAction, onUpdate: NoAction)

}

model lineage {
  id     Int     @id @default(autoincrement())
  name    String? @db.Text
  description String @db.Text
  characters   character_lineage[] @relation
  skills lineage_skill[] @relation
}

model character_lineage{
  id     Int     @id @default(autoincrement())
  characterId Int
  lineageId Int 
  pure Boolean @default(false)

  character character @relation(fields: [characterId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cl_ibfk_1")
  lineage lineage @relation(fields: [lineageId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cl_ibfk_2")
  
  @@unique([characterId, lineageId])
}

model path {
  id Int @id @default(autoincrement())
  name String @db.Text
  description String @db.Text
  pathTier Int
  vitality Int
  power Int
  addMagics Int @default(0)
  addTechniques Int @default(0)
  addManeuvers Int @default(0)
  addOaths Int @default(0)
  addTricks Int @default(0)
  reqMagics Int @default(0)
  reqTechniques Int @default(0)
  reqManeuvers Int @default(0)
  reqOaths Int @default(0)
  reqTricks Int @default(0)
  prerequisiteId Int?    @unique
  prerequisite   path?   @relation("PreRequisite", fields: [prerequisiteId], references: [id])
  upgrade path?   @relation("PreRequisite")
  characters   character_path[] @relation
  skills path_skill[] @relation
  trainings path_training[] @relation
}

model character_path {
  id Int @id @default(autoincrement())
  characterId Int 
  pathId Int
    
  character character @relation(fields: [characterId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "pc_ibfk_1")
  path path @relation(fields: [pathId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "pc_ibfk_2")

  @@unique([characterId, pathId])
}

model path_skill {
  id          Int  @id @default(autoincrement())
  pathId Int
  skillId     Int

  path   path @relation(fields: [pathId], references: [id])
  skill skill     @relation(fields: [skillId], references: [id])

  @@unique([pathId, skillId])
}

model skill {
  id     Int     @id @default(autoincrement())
  name    String? @db.Text
  description    String? @db.Text
  agi Int @default(0)
  bdy Int @default(0)
  mnd Int @default(0)
  lvl Int @default(0)
  trSiz Int @default(0)
  rlSiz Int @default(0)
  increaseTrueSize Int @default(0)
  increaseRelativeSize Int @default(0)
  prerequisiteId Int?    @unique
  prerequisite   skill?   @relation("PreRequisite", fields: [prerequisiteId], references: [id])
  upgrade skill?   @relation("PreRequisite")
  type          skillType @default(CHARACTERISTIC)
  techniqueSubtype techniqueSubtype?
  characters   character_skill[] @relation
  lineages lineage_skill[] @relation
  paths path_skill[] @relation  
}

enum skillType {
  CHARACTERISTIC
  MAGIC
  TECHNIQUE
}

enum techniqueSubtype {
  MANEUVER
  OATH
  TRICK
}


model character_skill {
  id          Int  @id @default(autoincrement())
  characterId Int
  skillId     Int
  level       Int  @default(1)

  character   character @relation(fields: [characterId], references: [id])
  skill       skill     @relation(fields: [skillId], references: [id])

  @@unique([characterId, skillId])
}

model lineage_skill {
  id Int @id @default(autoincrement())
  lineageId Int 
  skillId Int     
  pureSkill Boolean

  lineage lineage @relation(fields: [lineageId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "ls_ibfk_1")
  skill skill @relation(fields: [skillId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "ls_ibfk_2")
  
  @@unique([lineageId, skillId])

}

model training {
  id Int @id @default(autoincrement())
  name String @db.Text
  description String @db.Text
  type          trainingType @default(ARMOR)
  weightClass Int @default(1)
  prerequisiteId Int?    @unique
  prerequisite   training?   @relation("PreRequisite", fields: [prerequisiteId], references: [id])
  upgrade training?   @relation("PreRequisite")
  characters character_training[] @relation
  paths path_training[] @relation

  weapons weapon[] @relation(map: "wt_ibfk_2")

  armors armor[] @relation(map: "at_ibfk_2")
}

enum trainingType {
  ARMOR
  SHIELD
  WEAPONS
}

model path_training{
  id Int @id @default(autoincrement())
  pathId Int 
  trainingId Int     

  path path @relation(fields: [pathId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "pt_ibfk_1")
  training training @relation(fields: [trainingId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "pt_ibfk_2")
  
  @@unique([pathId, trainingId])
}

model character_training {
  id Int @id @default(autoincrement())
  characterId Int
  trainingId Int

  character character @relation(fields: [characterId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "ct_ibfk_1")
  training training @relation(fields: [trainingId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "ct_ibfk_2")

  @@unique([characterId, trainingId])
}

model weapon {
  id      Int      @id @default(autoincrement())
  name String
  description String
  trainingId Int @unique
  craftTier Int @default(1)
  material material
  type weaponType
  weight Int @default(0)
  cost Int @default(0)
  attacks attack[]

  training training @relation(fields: [trainingId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "wt_ibfk_2")
  characters character_weapon[] @relation
}

enum weaponType {
  Bow
  Discreet
  Thrown
  Firearm
  Polearm
  Natural
  Harpoon
  Crossbow
  Whip
  Club
  Chain
  Unarmed
  FieldSword
  DuelingSword
  Scythe
  Lance
  Axe
  Hammer
}

model attack {
  id Int @id @default(autoincrement())
  weaponId Int
  name String
  hitOn Int @default(4)
  critOn Int @default(6)
  reach Int @default(1)
  vigorCost Int @default(1)
  damage atkDamage? @relation
  weapon weapon @relation(fields: [weaponId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "a_ibfk_1")
}

model atkDamage {
  id Int @id @default(autoincrement())
  attackId Int @unique
  physicalType physicalDamage
  magicalType magicalDamage?
  elementSubtype elementalDamage?
  hermeticSubtype hermeticDamage?
  baseDmg Int @default(1)
  critDmg Int @default(1)
  agiScale Float @default(0.5)
  strScale Float @default(0.5)
  attack attack @relation(fields: [attackId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "dmg_ibfk_1")
}

enum physicalDamage {
  Impact
  Pierce
  Slash
}

enum magicalDamage {
  Elemental
  Hermetic
  Occult
  Profane
  Sacred
}

enum elementalDamage {
  Acid
  Cold
  Fire
  Lightning
}

enum hermeticDamage {
  Arcane
  Cosmic
  Psychic
}

model character_weapon {
  id Int @id @default(autoincrement())
  characterId Int
  weaponId Int
  wielding Boolean @default(false)
  twoHanding Boolean @default(false)
  trained Boolean @default(false)
  character   character @relation(fields: [characterId], references: [id])
  weapon       weapon     @relation(fields: [weaponId], references: [id])
}

enum material {
  Adamantine
  Bronze
  DragonBone
  Iron
  Silver
  Steel
  Wood
  Leather
  Padding
  DragonScale
}

model armor {
  id      Int      @id @default(autoincrement())
  name String
  description String
  trainingId Int @unique
  craftTier Int @default(1)
  material material
  defense Int @default(1)
  
  weight Int @default(4)
  cost Int @default(200)

  armorResistances armorResistances? @relation
  characters character_armor[] @relation
  training training @relation(fields: [trainingId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "at_ibfk_2")
 
}

model character_armor {
  id Int @id @default(autoincrement())
  characterId Int
  armorId Int
  equipped Boolean @default(false)
  trained Boolean @default(false)
  character   character @relation(fields: [characterId], references: [id])
  armor       armor     @relation(fields: [armorId], references: [id])
}

model armorResistances {
  id Int @id @default(autoincrement())
  armorId Int @unique(map: "armorId")
  impactRes Int @default(0)
  pierceRes Int @default(0)
  slashRes Int @default(0)
  acidRes Int @default(0)
  coldRes Int @default(0)
  fireRes Int @default(0)
  arcaneRes Int @default(0)
  cosmicRes Int @default(0)
  psychicRes Int @default(0)
  occultRes Int @default(0)
  profaneRes Int @default(0)
  sacredRes Int @default(0)
  armor       armor     @relation(fields: [armorId], references: [id], onDelete: NoAction, onUpdate: NoAction)

}

model user {
  id      Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email     String   @unique
  username  String
  password  String
  characters character[] @relation()
}