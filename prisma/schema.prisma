generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model campaign {
  id         Int       @id @default(autoincrement())
  createdAt  DateTime  @default(now()) @db.Timestamp(0)
  title      String    @db.Text
  daysPassed Int
  month      monthName @default(Vivenerius)
  weekDay    weekDay
  timeOfDay  timeOfDay
}

enum monthName {
  Vivenerius //Summer - Month of Life
  Iudelo //Summer - Month of Light and Justice
  Auramo //Summer - Month of Prosperity
  Taxidinas // Autumn - Month of Journeys
  Ipnas // Autumn - Month of Slumber
  Malkan // Autumn - Moth of Mourning
  Fengarinas //Winter - Month of the Moon
  Belliurus //Winter - Month of Battles
  Hermicus //Winter - Month of Magic
  Artemino // Spring - Month of Nature
  Irinias // Spring - Month of Peace
  Krona // Spring - Month of Thoughtfulness
}

enum weekDay {
  Aeteri //Dia de Aeter, o Aeterno
  Silveri // Dia da Lua de Prata
  Ulri // Dia de Ulrometh, o Guerreiro
  Auramari //Dia de Auramar, o Dourado
  Viveri // Dia de Viven, a Progenitora
  Justari //Dia de Justicar, a Luz da Justiça
  Exori // Dia do Êxodo
}

enum timeOfDay {
  Dawn
  Day
  Night
  Dusk
}

model character {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @db.Timestamp(0)
  name      String   @db.Text

  level            Int @default(1)
  experience       Int @default(0)
  tier             Int @default(1)
  pendingLineages  Int @default(2)
  pendingPath      Int @default(1)
  pendingSkills    Int @default(2)
  pendingTrainings Int @default(1)

  agility Int
  body    Int
  mind    Int

  vitality     Int @default(1)
  vigor        Int @default(1)
  power        Int @default(1)
  poise        Int @default(1)
  initiative   Int @default(1)
  trueSize     Int @default(1)
  relativeSize Int @default(1)

  baseWeight Int @default(10)
  carryCap   Int @default(10)
  liftCap    Int @default(15)

  impactRes    Int @default(0)
  pierceRes    Int @default(0)
  slashRes     Int @default(0)
  acidRes      Int @default(0)
  coldRes      Int @default(0)
  fireRes      Int @default(0)
  lightningRes Int @default(0)
  arcaneRes    Int @default(0)
  cosmicRes    Int @default(0)
  psychicRes   Int @default(0)
  profaneRes   Int @default(0)
  sacredRes    Int @default(0)
  fullRes      Int @default(0)

  gold Int @default(500)

  slotWeapon   Int @default(2)
  slotHelm     Int @default(1)
  slotPauldron Int @default(2)
  slotGauntlet Int @default(2)
  slotCuirass  Int @default(1)
  slotTassets  Int @default(1)
  slotGreaves  Int @default(2)
  slotCloak    Int @default(1)
  slotAmulet   Int @default(1)
  slotBelt     Int @default(1)
  slotRings    Int @default(10)
  slotEarings  Int @default(2)

  public   Boolean @default(false)
  authorId Int
  user     user    @relation(fields: [authorId], references: [id], map: "character_ibfk_1")

  skills   character_skill[]   @relation
  lineages character_lineage[] @relation
  paths    character_path[]    @relation
  weapons  character_weapon[]  @relation
  armors   character_armor[]   @relation

  @@index([authorId], map: "authorId")
}

model lineage {
  id          Int                 @id @default(autoincrement())
  name        String?             @db.Text
  description String              @db.Text
  characters  character_lineage[] @relation
  skills      lineage_skill[]     @relation
}

model character_lineage {
  id          Int     @id @default(autoincrement())
  characterId Int
  lineageId   Int
  pure        Boolean @default(false)

  character character @relation(fields: [characterId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cl_ibfk_1")
  lineage   lineage   @relation(fields: [lineageId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cl_ibfk_2")

  @@unique([characterId, lineageId])
}

model path {
  id             Int              @id @default(autoincrement())
  name           String           @db.Text
  description    String           @db.Text
  pathTier       Int
  vitality       Int
  power          Int
  addMagics      Int              @default(0)
  addTechniques  Int              @default(0)
  addManeuvers   Int              @default(0)
  addOaths       Int              @default(0)
  addTricks      Int              @default(0)
  reqMagics      Int              @default(0)
  reqTechniques  Int              @default(0)
  reqManeuvers   Int              @default(0)
  reqOaths       Int              @default(0)
  reqTricks      Int              @default(0)
  prerequisiteId Int?             @unique
  prerequisite   path?            @relation("PreRequisite", fields: [prerequisiteId], references: [id])
  upgrade        path?            @relation("PreRequisite")
  characters     character_path[] @relation
  skills         path_skill[]     @relation
}

model character_path {
  id          Int @id @default(autoincrement())
  characterId Int
  pathId      Int

  character character @relation(fields: [characterId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "pc_ibfk_1")
  path      path      @relation(fields: [pathId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "pc_ibfk_2")

  @@unique([characterId, pathId])
}

model path_skill {
  id      Int @id @default(autoincrement())
  pathId  Int
  skillId Int

  path  path  @relation(fields: [pathId], references: [id])
  skill skill @relation(fields: [skillId], references: [id])

  @@unique([pathId, skillId])
}

model skill {
  id                   Int               @id @default(autoincrement())
  name                 String?           @db.Text
  description          String?           @db.Text
  agi                  Int               @default(0)
  bdy                  Int               @default(0)
  mnd                  Int               @default(0)
  lvl                  Int               @default(0)
  trSiz                Int               @default(0)
  rlSiz                Int               @default(0)
  increaseTrueSize     Int               @default(0)
  increaseRelativeSize Int               @default(0)
  prerequisiteId       Int?              @unique
  prerequisite         skill?            @relation("PreRequisite", fields: [prerequisiteId], references: [id])
  upgrade              skill?            @relation("PreRequisite")
  type                 skillType         @default(CHARACTERISTIC)
  techniqueSubtype     techniqueSubtype?
  characters           character_skill[] @relation
  lineages             lineage_skill[]   @relation
  paths                path_skill[]      @relation
}

enum skillType {
  CHARACTERISTIC
  MAGIC
  TECHNIQUE
}

enum techniqueSubtype {
  MANEUVER
  OATH
  TRICK
}

model effect {
  id          Int          @id @default(autoincrement())
  targetId    Int
  targetModel effectTarget
  targetField String
  effectValue Float
  operator    operator
}

enum effectTarget {
  character
  weapon
  armor
}

enum operator {
  Sum
  Sub
  Mult
  Div
}

model character_skill {
  id          Int @id @default(autoincrement())
  characterId Int
  skillId     Int
  level       Int @default(1)

  character character @relation(fields: [characterId], references: [id])
  skill     skill     @relation(fields: [skillId], references: [id])

  @@unique([characterId, skillId])
}

model lineage_skill {
  id        Int     @id @default(autoincrement())
  lineageId Int
  skillId   Int
  pureSkill Boolean

  lineage lineage @relation(fields: [lineageId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "ls_ibfk_1")
  skill   skill   @relation(fields: [skillId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "ls_ibfk_2")

  @@unique([lineageId, skillId])
}

model weapon {
  id          Int        @id @default(autoincrement())
  name        String
  description String
  type        weaponType
  baseWeight  Int        @default(0)
  baseCost    Int        @default(0)
  baseReach   Int        @default(1)

  characters character_weapon[] @relation
}

model character_weapon {
  id          Int      @id @default(autoincrement())
  characterId Int
  weaponId    Int
  craftTier   Int      @default(1)
  material    material
  reach       Int      @default(1)
  weight      Int      @default(0)
  cost        Int      @default(0)
  wielding    Boolean  @default(false)
  twoHanding  Boolean  @default(false)
  trained     Boolean  @default(false)

  character character @relation(fields: [characterId], references: [id])
  weapon    weapon    @relation(fields: [weaponId], references: [id])
  attacks   attack[]
}

enum weaponType {
  Bow
  Discreet
  Thrown
  Firearm
  Polearm
  Natural
  Harpoon
  Crossbow
  Whip
  Club
  Chain
  Unarmed
  FieldSword
  DuelingSword
  Scythe
  Lance
  Axe
  Hammer
}

model attack {
  id           Int               @id @default(autoincrement())
  charWeaponId Int
  name         String
  hitMod       Int               @default(0)
  critOnPoise  Int               @default(1)
  critMult     Float             @default(2)
  reach        Int               @default(1)
  vigorCost    Int               @default(1)
  damages      atkDamage[]       @relation
  charWeapon   character_weapon? @relation(fields: [charWeaponId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "a_ibfk_1")
}

model atkDamage {
  id         Int        @id @default(autoincrement())
  attackId   Int        @unique
  damageType damageType
  baseDie    Int        @default(1)
  agiScale   Float      @default(0)
  strScale   Float      @default(0)
  mndScale   Float      @default(0)
  attack     attack     @relation(fields: [attackId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "dmg_ibfk_1")
}

enum damageType {
  Impact
  Pierce
  Slash

  Acid
  Cold
  Fire
  Lightning

  Arcane
  Cosmic
  Psychic

  Profane
  Sacred
}

enum material {
  Couro
  Tecidos
  Madeira
  Bronze
  Ferro
  Aço
  Prata
  Ouro
  Adamante
  Draconico
}

model armor {
  id           Int               @id @default(autoincrement())
  resistanceId Int               @default(1)
  trainingId   Int
  name         String
  description  String
  baseDefense  Int               @default(1)
  weight       Int               @default(0)
  baseCost     Int               @default(0)
  characters   character_armor[] @relation
}

model character_armor {
  id           Int       @id @default(autoincrement())
  characterId  Int
  armorId      Int
  resistanceId Int       @default(1)
  material     material
  craftTier    Int       @default(1)
  defense      Int       @default(1)
  weight       Int       @default(0)
  baseCost     Int       @default(0)
  equipped     Boolean   @default(false)
  trained      Boolean   @default(false)
  character    character @relation(fields: [characterId], references: [id])
  armor        armor     @relation(fields: [armorId], references: [id])
}

model user {
  id         Int         @id @default(autoincrement())
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  email      String      @unique
  username   String
  password   String
  characters character[] @relation()
}
